generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String         @id @default(uuid())
  name           String
  nickname       String         @unique
  passwordHash   String         @map("password_hash")
  createdAt      DateTime       @default(now()) @map("created_at")
  leaguesCreated League[]       @relation("LeagueCreator")
  leagueMembers  LeagueMember[]
  predictions    Prediction[]
}

model League {
  id          String         @id @default(uuid())
  name        String
  createdBy   String
  createdAt   DateTime       @default(now()) @map("created_at")
  creator     User           @relation("LeagueCreator", fields: [createdBy], references: [id])
  members     LeagueMember[]
  predictions Prediction[]
}

model LeagueMember {
  id       String   @id @default(uuid())
  leagueId String
  userId   String
  joinedAt DateTime @default(now()) @map("joined_at")
  league   League   @relation(fields: [leagueId], references: [id])
  user     User     @relation(fields: [userId], references: [id])

  @@unique([leagueId, userId])
}

model Match {
  id          String       @id @default(uuid())
  homeTeam    String
  awayTeam    String
  matchDate   DateTime     @map("match_date")
  homeScore   Int?
  awayScore   Int?
  createdAt   DateTime     @default(now()) @map("created_at")
  predictions Prediction[]
}

model Prediction {
  id        String   @id @default(uuid())
  matchId   String
  userId    String
  leagueId  String
  homeGuess Int
  awayGuess Int
  points    Int      @default(0)
  createdAt DateTime @default(now()) @map("created_at")
  league    League   @relation(fields: [leagueId], references: [id])
  match     Match    @relation(fields: [matchId], references: [id])
  user      User     @relation(fields: [userId], references: [id])

  @@unique([matchId, userId, leagueId])
}
